timestamp: 2014-07-08T21:36:19.100628
CREATE TABLE auth_user(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    first_name CHAR(128),
    last_name CHAR(128),
    email CHAR(512),
    password CHAR(512),
    registration_key CHAR(512),
    reset_password_key CHAR(512),
    registration_id CHAR(512)
);
success!
timestamp: 2014-07-08T21:36:19.234981
CREATE TABLE auth_group(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    role CHAR(512),
    description TEXT
);
success!
timestamp: 2014-07-08T21:36:19.390513
CREATE TABLE auth_membership(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    user_id INTEGER REFERENCES auth_user (id) ON DELETE CASCADE,
    group_id INTEGER REFERENCES auth_group (id) ON DELETE CASCADE
);
success!
timestamp: 2014-07-08T21:36:19.525760
CREATE TABLE auth_permission(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    group_id INTEGER REFERENCES auth_group (id) ON DELETE CASCADE,
    name CHAR(512),
    table_name CHAR(512),
    record_id INTEGER
);
success!
timestamp: 2014-07-08T21:36:19.651512
CREATE TABLE auth_event(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    time_stamp TIMESTAMP,
    client_ip CHAR(512),
    user_id INTEGER REFERENCES auth_user (id) ON DELETE CASCADE,
    origin CHAR(512),
    description TEXT
);
success!
timestamp: 2014-07-08T21:36:19.809394
CREATE TABLE auth_cas(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    user_id INTEGER REFERENCES auth_user (id) ON DELETE CASCADE,
    created_on TIMESTAMP,
    service CHAR(512),
    ticket CHAR(512),
    renew CHAR(1)
);
success!
timestamp: 2014-07-19T02:19:39.978805
CREATE TABLE Librarian(
    id SERIAL PRIMARY KEY,
    username VARCHAR(512),
    password VARCHAR(512)
);
success!
timestamp: 2014-07-19T02:19:40.462804
CREATE TABLE auth_user(
    id SERIAL PRIMARY KEY,
    first_name VARCHAR(128),
    last_name VARCHAR(128),
    email VARCHAR(512),
    password VARCHAR(512),
    registration_key VARCHAR(512),
    reset_password_key VARCHAR(512),
    registration_id VARCHAR(512)
);
timestamp: 2014-07-19T02:20:51.691871
ALTER TABLE Librarian DROP COLUMN password;
success!
timestamp: 2014-07-19T02:20:51.801354
CREATE TABLE auth_user(
    id SERIAL PRIMARY KEY,
    first_name VARCHAR(128),
    last_name VARCHAR(128),
    email VARCHAR(512),
    password VARCHAR(512),
    registration_key VARCHAR(512),
    reset_password_key VARCHAR(512),
    registration_id VARCHAR(512)
);
timestamp: 2014-07-19T02:21:23.943760
CREATE TABLE person(
    id SERIAL PRIMARY KEY,
    name VARCHAR(512)
);
success!
timestamp: 2014-07-19T02:21:24.141103
CREATE TABLE auth_user(
    id SERIAL PRIMARY KEY,
    first_name VARCHAR(128),
    last_name VARCHAR(128),
    email VARCHAR(512),
    password VARCHAR(512),
    registration_key VARCHAR(512),
    reset_password_key VARCHAR(512),
    registration_id VARCHAR(512)
);
timestamp: 2014-07-19T02:24:20.283242
CREATE TABLE person(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    name CHAR(512)
);
success!
timestamp: 2014-07-19T02:24:20.423852
CREATE TABLE auth_user(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    first_name CHAR(128),
    last_name CHAR(128),
    email CHAR(512),
    password CHAR(512),
    registration_key CHAR(512),
    reset_password_key CHAR(512),
    registration_id CHAR(512)
);
success!
timestamp: 2014-07-19T02:24:20.552316
CREATE TABLE auth_group(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    role CHAR(512),
    description TEXT
);
success!
timestamp: 2014-07-19T02:24:20.664122
CREATE TABLE auth_membership(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    user_id INTEGER REFERENCES auth_user (id) ON DELETE CASCADE,
    group_id INTEGER REFERENCES auth_group (id) ON DELETE CASCADE
);
success!
timestamp: 2014-07-19T02:24:20.777115
CREATE TABLE auth_permission(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    group_id INTEGER REFERENCES auth_group (id) ON DELETE CASCADE,
    name CHAR(512),
    table_name CHAR(512),
    record_id INTEGER
);
success!
timestamp: 2014-07-19T02:24:20.886146
CREATE TABLE auth_event(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    time_stamp TIMESTAMP,
    client_ip CHAR(512),
    user_id INTEGER REFERENCES auth_user (id) ON DELETE CASCADE,
    origin CHAR(512),
    description TEXT
);
success!
timestamp: 2014-07-19T02:24:21.013622
CREATE TABLE auth_cas(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    user_id INTEGER REFERENCES auth_user (id) ON DELETE CASCADE,
    created_on TIMESTAMP,
    service CHAR(512),
    ticket CHAR(512),
    renew CHAR(1)
);
success!
timestamp: 2014-07-19T02:27:53.484529
CREATE TABLE librarian(
    id SERIAL PRIMARY KEY,
    username VARCHAR(512),
    password VARCHAR(512)
);
success!
timestamp: 2014-07-19T02:27:53.666449
CREATE TABLE auth_user(
    id SERIAL PRIMARY KEY,
    first_name VARCHAR(128),
    last_name VARCHAR(128),
    email VARCHAR(512),
    password VARCHAR(512),
    registration_key VARCHAR(512),
    reset_password_key VARCHAR(512),
    registration_id VARCHAR(512)
);
success!
timestamp: 2014-07-19T02:27:53.799829
CREATE TABLE auth_group(
    id SERIAL PRIMARY KEY,
    role VARCHAR(512),
    description TEXT
);
success!
timestamp: 2014-07-19T02:27:53.934674
CREATE TABLE auth_membership(
    id SERIAL PRIMARY KEY,
    user_id INTEGER REFERENCES auth_user (id) ON DELETE CASCADE,
    group_id INTEGER REFERENCES auth_group (id) ON DELETE CASCADE
);
success!
timestamp: 2014-07-19T02:27:54.029401
CREATE TABLE auth_permission(
    id SERIAL PRIMARY KEY,
    group_id INTEGER REFERENCES auth_group (id) ON DELETE CASCADE,
    name VARCHAR(512),
    table_name VARCHAR(512),
    record_id INTEGER
);
success!
timestamp: 2014-07-19T02:27:54.182065
CREATE TABLE auth_event(
    id SERIAL PRIMARY KEY,
    time_stamp TIMESTAMP,
    client_ip VARCHAR(512),
    user_id INTEGER REFERENCES auth_user (id) ON DELETE CASCADE,
    origin VARCHAR(512),
    description TEXT
);
success!
timestamp: 2014-07-19T02:27:54.322506
CREATE TABLE auth_cas(
    id SERIAL PRIMARY KEY,
    user_id INTEGER REFERENCES auth_user (id) ON DELETE CASCADE,
    created_on TIMESTAMP,
    service VARCHAR(512),
    ticket VARCHAR(512),
    renew CHAR(1)
);
success!
timestamp: 2014-08-03T08:53:16.049000
CREATE TABLE librarian(
    id SERIAL PRIMARY KEY,
    username VARCHAR(512),
    password VARCHAR(512)
);
success!
timestamp: 2014-08-03T08:53:28.057000
CREATE TABLE auth_user(
    id SERIAL PRIMARY KEY,
    first_name VARCHAR(128),
    last_name VARCHAR(128),
    email VARCHAR(512),
    password VARCHAR(512),
    registration_key VARCHAR(512),
    reset_password_key VARCHAR(512),
    registration_id VARCHAR(512)
);
success!
timestamp: 2014-08-03T08:53:29.097000
CREATE TABLE auth_group(
    id SERIAL PRIMARY KEY,
    role VARCHAR(512),
    description TEXT
);
success!
timestamp: 2014-08-03T08:53:30.145000
CREATE TABLE auth_membership(
    id SERIAL PRIMARY KEY,
    user_id INTEGER REFERENCES auth_user (id) ON DELETE CASCADE,
    group_id INTEGER REFERENCES auth_group (id) ON DELETE CASCADE
);
success!
timestamp: 2014-08-03T08:53:31.167000
CREATE TABLE auth_permission(
    id SERIAL PRIMARY KEY,
    group_id INTEGER REFERENCES auth_group (id) ON DELETE CASCADE,
    name VARCHAR(512),
    table_name VARCHAR(512),
    record_id INTEGER
);
success!
timestamp: 2014-08-03T08:53:32.543000
CREATE TABLE auth_event(
    id SERIAL PRIMARY KEY,
    time_stamp TIMESTAMP,
    client_ip VARCHAR(512),
    user_id INTEGER REFERENCES auth_user (id) ON DELETE CASCADE,
    origin VARCHAR(512),
    description TEXT
);
success!
timestamp: 2014-08-03T08:53:33.742000
CREATE TABLE auth_cas(
    id SERIAL PRIMARY KEY,
    user_id INTEGER REFERENCES auth_user (id) ON DELETE CASCADE,
    created_on TIMESTAMP,
    service VARCHAR(512),
    ticket VARCHAR(512),
    renew CHAR(1)
);
success!
timestamp: 2014-08-03T16:14:59.988000
ALTER TABLE librarian ADD username__tmp VARCHAR(30);
UPDATE librarian SET username__tmp=username;
ALTER TABLE librarian DROP COLUMN username;
ALTER TABLE librarian ADD username VARCHAR(30);
UPDATE librarian SET username=username__tmp;
ALTER TABLE librarian DROP COLUMN username__tmp;
timestamp: 2014-08-03T16:15:01.403000
ALTER TABLE librarian ADD password__tmp VARCHAR(30);
UPDATE librarian SET password__tmp=password;
ALTER TABLE librarian DROP COLUMN password;
ALTER TABLE librarian ADD password VARCHAR(30);
UPDATE librarian SET password=password__tmp;
ALTER TABLE librarian DROP COLUMN password__tmp;
success!
timestamp: 2014-08-03T16:31:08.180000
ALTER TABLE librarian ADD name VARCHAR(50);
timestamp: 2014-08-03T16:31:08.225000
ALTER TABLE librarian ADD id_num VARCHAR(9);
timestamp: 2014-08-03T16:31:08.295000
ALTER TABLE librarian ADD birthday DATE;
success!
timestamp: 2014-08-03T22:31:42.008000
CREATE TABLE library(
    id SERIAL PRIMARY KEY,
    name VARCHAR(512) UNIQUE,
    place VARCHAR(50)
);
success!
timestamp: 2014-08-03T22:31:43.537000
CREATE TABLE librarian(
    id_num VARCHAR(9) NOT NULL,
    name VARCHAR(50),
    username VARCHAR(30),
    password VARCHAR(30),
    PRIMARY KEY(id_num)) ;
success!
timestamp: 2014-08-03T22:31:44.165000
CREATE TABLE book(
    ISBN INTEGER NOT NULL UNIQUE,
    library_id INTEGER REFERENCES library (id) ON DELETE CASCADE,
    title VARCHAR(100),
    publisher_last_name VARCHAR(50),
    publisher_first_name VARCHAR(50),
    isAvailable CHAR(1),
    PRIMARY KEY(ISBN)) ;
success!
timestamp: 2014-08-03T22:31:44.948000
CREATE TABLE author(
    id SERIAL PRIMARY KEY,
    ISBN INTEGER, CONSTRAINT  "FK_author_ISBN__constraint" FOREIGN KEY (ISBN) REFERENCES book (ISBN) ON DELETE CASCADE,
    last_name VARCHAR(20),
    first_name VARCHAR(30)
);
success!
timestamp: 2014-08-03T22:40:13.563000
ALTER TABLE library ADD address VARCHAR(50);
timestamp: 2014-08-03T22:40:13.721000
ALTER TABLE library DROP COLUMN place;
success!
timestamp: 2014-08-03T22:47:22.137000
CREATE TABLE manage(
    id SERIAL PRIMARY KEY,
    ISBN INTEGER, CONSTRAINT  "FK_manage_ISBN__constraint" FOREIGN KEY (ISBN) REFERENCES book (ISBN) ON DELETE CASCADE,
    librarian_id VARCHAR(9), CONSTRAINT  "FK_manage_librarian_id__constraint" FOREIGN KEY (librarian_id) REFERENCES librarian (id_num) ON DELETE CASCADE,
    trans VARCHAR(512),
    transdate DATE
);
success!
timestamp: 2014-08-03T22:47:22.990000
CREATE TABLE borrower(
    id_num VARCHAR(9) NOT NULL,
    last_name VARCHAR(20),
    first_name VARCHAR(30),
    PRIMARY KEY(id_num)) ;
success!
timestamp: 2014-08-03T22:47:23.568000
CREATE TABLE borrowing(
    id SERIAL PRIMARY KEY,
    ISBNreference book VARCHAR(512),
    borrwer_id VARCHAR(9), CONSTRAINT  "FK_borrowing_borrwer_id__constraint" FOREIGN KEY (borrwer_id) REFERENCES borrower (id_num) ON DELETE CASCADE,
    startdate DATE,
    duedate DATE
);
timestamp: 2014-08-03T22:54:06.022000
CREATE TABLE borrowing(
    id SERIAL PRIMARY KEY,
    ISBNreference book VARCHAR(512),
    borrwer_id VARCHAR(9), CONSTRAINT  "FK_borrowing_borrwer_id__constraint" FOREIGN KEY (borrwer_id) REFERENCES borrower (id_num) ON DELETE CASCADE,
    startdate DATE,
    duedate DATE
);
timestamp: 2014-08-03T22:56:42.686000
CREATE TABLE borrowing(
    id SERIAL PRIMARY KEY,
    ISBNreference book VARCHAR(512),
    borrwer_id VARCHAR(9), CONSTRAINT  "FK_borrowing_borrwer_id__constraint" FOREIGN KEY (borrwer_id) REFERENCES borrower (id_num) ON DELETE CASCADE,
    startdate DATE,
    duedate DATE
);
timestamp: 2014-08-03T22:57:24.839000
CREATE TABLE borrowing(
    id SERIAL PRIMARY KEY,
    ISBN INTEGER, CONSTRAINT  "FK_borrowing_ISBN__constraint" FOREIGN KEY (ISBN) REFERENCES book (ISBN) ON DELETE CASCADE,
    borrwer_id VARCHAR(9), CONSTRAINT  "FK_borrowing_borrwer_id__constraint" FOREIGN KEY (borrwer_id) REFERENCES borrower (id_num) ON DELETE CASCADE,
    startdate DATE,
    duedate DATE
);
success!
timestamp: 2014-08-03T22:57:25.648000
CREATE TABLE auth_user(
    id SERIAL PRIMARY KEY,
    first_name VARCHAR(128),
    last_name VARCHAR(128),
    email VARCHAR(512),
    password VARCHAR(512),
    registration_key VARCHAR(512),
    reset_password_key VARCHAR(512),
    registration_id VARCHAR(512)
);
success!
timestamp: 2014-08-03T22:57:26.687000
CREATE TABLE auth_group(
    id SERIAL PRIMARY KEY,
    role VARCHAR(512),
    description TEXT
);
success!
timestamp: 2014-08-03T22:57:27.645000
CREATE TABLE auth_membership(
    id SERIAL PRIMARY KEY,
    user_id INTEGER REFERENCES auth_user (id) ON DELETE CASCADE,
    group_id INTEGER REFERENCES auth_group (id) ON DELETE CASCADE
);
success!
timestamp: 2014-08-03T22:57:28.493000
CREATE TABLE auth_permission(
    id SERIAL PRIMARY KEY,
    group_id INTEGER REFERENCES auth_group (id) ON DELETE CASCADE,
    name VARCHAR(512),
    table_name VARCHAR(512),
    record_id INTEGER
);
success!
timestamp: 2014-08-03T22:57:29.422000
CREATE TABLE auth_event(
    id SERIAL PRIMARY KEY,
    time_stamp TIMESTAMP,
    client_ip VARCHAR(512),
    user_id INTEGER REFERENCES auth_user (id) ON DELETE CASCADE,
    origin VARCHAR(512),
    description TEXT
);
success!
timestamp: 2014-08-03T22:57:30.319000
CREATE TABLE auth_cas(
    id SERIAL PRIMARY KEY,
    user_id INTEGER REFERENCES auth_user (id) ON DELETE CASCADE,
    created_on TIMESTAMP,
    service VARCHAR(512),
    ticket VARCHAR(512),
    renew CHAR(1)
);
success!
timestamp: 2014-08-04T06:27:23.693000
ALTER TABLE library ADD address__tmp VARCHAR(20);
UPDATE library SET address__tmp=address;
ALTER TABLE library DROP COLUMN address;
ALTER TABLE library ADD address VARCHAR(20);
UPDATE library SET address=address__tmp;
ALTER TABLE library DROP COLUMN address__tmp;
success!
timestamp: 2014-08-04T06:27:23.820000
ALTER TABLE librarian ADD username__tmp VARCHAR(10);
UPDATE librarian SET username__tmp=username;
ALTER TABLE librarian DROP COLUMN username;
ALTER TABLE librarian ADD username VARCHAR(10);
UPDATE librarian SET username=username__tmp;
ALTER TABLE librarian DROP COLUMN username__tmp;
timestamp: 2014-08-04T06:27:23.859000
ALTER TABLE librarian ADD librarian_id VARCHAR(512) NOT NULL UNIQUE;
timestamp: 2014-08-04T06:27:23.985000
ALTER TABLE librarian ADD lname VARCHAR(15);
timestamp: 2014-08-04T06:27:23.988000
ALTER TABLE librarian ADD fname VARCHAR(15);
timestamp: 2014-08-04T06:27:23.990000
ALTER TABLE librarian ADD lib_name INTEGER REFERENCES library (id) ON DELETE CASCADE;
timestamp: 2014-08-04T06:27:24.010000
ALTER TABLE librarian ADD password__tmp VARCHAR(20);
UPDATE librarian SET password__tmp=password;
ALTER TABLE librarian DROP COLUMN password;
ALTER TABLE librarian ADD password VARCHAR(20);
UPDATE librarian SET password=password__tmp;
ALTER TABLE librarian DROP COLUMN password__tmp;
timestamp: 2014-08-04T06:27:24.024000
ALTER TABLE librarian DROP COLUMN id_num;
timestamp: 2014-08-04T06:29:08.838000
ALTER TABLE librarian ADD username__tmp VARCHAR(10);
timestamp: 2014-08-04T06:31:44.189000
ALTER TABLE librarian ADD username__tmp VARCHAR(10);
timestamp: 2014-08-04T06:56:02.062000
ALTER TABLE library ADD lib_name VARCHAR(512) NOT NULL UNIQUE;
timestamp: 2014-08-04T07:05:41.834000
CREATE TABLE library(
    lib_name VARCHAR(512) NOT NULL UNIQUE,
    address VARCHAR(20),
    PRIMARY KEY(lib_name)) ;
success!
timestamp: 2014-08-04T07:05:41.990000
CREATE TABLE librarian(
    librarian_id VARCHAR(512) NOT NULL UNIQUE,
    lib_name VARCHAR(512), CONSTRAINT  "FK_librarian_lib_name__constraint" FOREIGN KEY (lib_name) REFERENCES library (lib_name) ON DELETE CASCADE,
    username VARCHAR(10),
    password VARCHAR(20),
    lname VARCHAR(15),
    fname VARCHAR(15),
    PRIMARY KEY(librarian_id)) ;
success!
timestamp: 2014-08-04T07:05:42.103000
CREATE TABLE book(
    ISBN VARCHAR(20) NOT NULL UNIQUE,
    lib_name VARCHAR(512), CONSTRAINT  "FK_book_lib_name__constraint" FOREIGN KEY (lib_name) REFERENCES library (lib_name) ON DELETE CASCADE,
    title VARCHAR(100),
    publisher_lname VARCHAR(50),
    publisher_fname VARCHAR(50),
    no_of_copies INTEGER,
    available_copies INTEGER,
    description VARCHAR(255),
    PRIMARY KEY(ISBN)) ;
success!
timestamp: 2014-08-04T07:05:42.213000
CREATE TABLE author(
    id SERIAL PRIMARY KEY,
    ISBN VARCHAR(20), CONSTRAINT  "FK_author_ISBN__constraint" FOREIGN KEY (ISBN) REFERENCES book (ISBN) ON DELETE CASCADE,
    lname VARCHAR(15),
    fname VARCHAR(15)
);
success!
timestamp: 2014-08-04T07:05:42.277000
CREATE TABLE borrower(
    borrower_id VARCHAR(15) NOT NULL,
    lib_name VARCHAR(512), CONSTRAINT  "FK_borrower_lib_name__constraint" FOREIGN KEY (lib_name) REFERENCES library (lib_name) ON DELETE CASCADE,
    lname VARCHAR(15),
    fname VARCHAR(15),
    PRIMARY KEY(borrower_id)) ;
success!
timestamp: 2014-08-04T07:05:42.419000
CREATE TABLE borrow_book(
    id SERIAL PRIMARY KEY,
    ISBN VARCHAR(20), CONSTRAINT  "FK_borrow_book_ISBN__constraint" FOREIGN KEY (ISBN) REFERENCES book (ISBN) ON DELETE CASCADE,
    librarian_id VARCHAR(512), CONSTRAINT  "FK_borrow_book_librarian_id__constraint" FOREIGN KEY (librarian_id) REFERENCES librarian (librarian_id) ON DELETE CASCADE,
    borrwer_id VARCHAR(15), CONSTRAINT  "FK_borrow_book_borrwer_id__constraint" FOREIGN KEY (borrwer_id) REFERENCES borrower (borrower_id) ON DELETE CASCADE,
    startdate DATE,
    duedate DATE,
    return_date DATE
);
success!
timestamp: 2014-08-04T07:05:42.606000
CREATE TABLE auth_user(
    id SERIAL PRIMARY KEY,
    first_name VARCHAR(128),
    last_name VARCHAR(128),
    email VARCHAR(512),
    password VARCHAR(512),
    registration_key VARCHAR(512),
    reset_password_key VARCHAR(512),
    registration_id VARCHAR(512)
);
success!
timestamp: 2014-08-04T07:05:42.748000
CREATE TABLE auth_group(
    id SERIAL PRIMARY KEY,
    role VARCHAR(512),
    description TEXT
);
success!
timestamp: 2014-08-04T07:05:42.878000
CREATE TABLE auth_membership(
    id SERIAL PRIMARY KEY,
    user_id INTEGER REFERENCES auth_user (id) ON DELETE CASCADE,
    group_id INTEGER REFERENCES auth_group (id) ON DELETE CASCADE
);
success!
timestamp: 2014-08-04T07:05:42.973000
CREATE TABLE auth_permission(
    id SERIAL PRIMARY KEY,
    group_id INTEGER REFERENCES auth_group (id) ON DELETE CASCADE,
    name VARCHAR(512),
    table_name VARCHAR(512),
    record_id INTEGER
);
success!
timestamp: 2014-08-04T07:05:43.094000
CREATE TABLE auth_event(
    id SERIAL PRIMARY KEY,
    time_stamp TIMESTAMP,
    client_ip VARCHAR(512),
    user_id INTEGER REFERENCES auth_user (id) ON DELETE CASCADE,
    origin VARCHAR(512),
    description TEXT
);
success!
timestamp: 2014-08-04T07:05:43.205000
CREATE TABLE auth_cas(
    id SERIAL PRIMARY KEY,
    user_id INTEGER REFERENCES auth_user (id) ON DELETE CASCADE,
    created_on TIMESTAMP,
    service VARCHAR(512),
    ticket VARCHAR(512),
    renew CHAR(1)
);
success!
timestamp: 2014-08-04T08:07:53.273000
ALTER TABLE library ADD lib_name VARCHAR(512) NOT NULL UNIQUE;
timestamp: 2014-08-04T08:07:54.581000
ALTER TABLE library ADD address__tmp VARCHAR(20);
UPDATE library SET address__tmp=address;
ALTER TABLE library DROP COLUMN address;
ALTER TABLE library ADD address VARCHAR(20);
UPDATE library SET address=address__tmp;
ALTER TABLE library DROP COLUMN address__tmp;
timestamp: 2014-08-04T08:07:56.001000
ALTER TABLE library DROP COLUMN id;
timestamp: 2014-08-04T09:22:43.525000
CREATE TABLE library(
    lib_name VARCHAR(512) NOT NULL UNIQUE,
    address VARCHAR(20),
    PRIMARY KEY(lib_name)) ;
